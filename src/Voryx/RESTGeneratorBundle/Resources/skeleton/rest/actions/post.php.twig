    /**
{% block phpdoc_method_header %}
     * Create a {{ entity }} entity.
     *
{% block documentation %}
{% if document %}
     * @ApiDoc(
     *   resource = true,
     *   description = "Create a {{ entity }} entity.",
     *   section = "{{ entity_plural }}",
     *   input = {
     *      "class" = "{{ namespace }}\Form\{{ entity }}Type",
     *      "name" = ""
     *   },
     *   output = {
     *      "class" = "{{ namespace }}\Entity\{{ entity }}",
{% if outputGroups | length %}
     *      "groups" = {
{%- for group in outputGroups -%}
    "{{- group -}}"
    {%- if not loop.last -%}
        {{ ', ' }}
    {%- endif -%}
{%- endfor -%}
                }
{% endif %}
     *   },
     *   statusCodes = {
     *     201 = "Created object.",
     *     400 = "Bad Request. Verify your params.",
     *     500 = "Form has errors."
     *   }
     * )
     *
{% endif %}
{% endblock documentation %}
     * @View(
{% if outputGroups | length %}
     *   serializerGroups={
    {%- for group in outputGroups -%}
        "{{- group -}}"
        {%- if not loop.last -%}
            {{ ', ' }}
        {%- endif -%}
    {%- endfor -%}
             },
{% endif %}
     *   statusCode=201,
     *   serializerEnableMaxDepthChecks=true
     * )
     *
     * @param Request $request
     *
     * @return FOSView|Response|{{ entity }}
{% endblock phpdoc_method_header %}
     *
{% block phpdoc_method_annotations %}
{% if 'annotation' == format %}{% endif %}
{% endblock phpdoc_method_annotations %}
     */
{% block method_definition %}
    public function postAction(Request $request)
{% endblock method_definition %}
    {
{% block method_body %}
        $entity = new {{ entity }}();
        $form = $this->createForm(get_class(new {{ entity }}Type()), $entity, array("method" => $request->getMethod()));
        $this->removeExtraFields($request, $form);
        $form->handleRequest($request);

        if ($form->isValid()) {
            $em = $this->getDoctrine()->getManager();
            $em->persist($entity);
            $em->flush();

            return $entity;
        }

{% endblock method_body %}
{% block method_return %}
        return FOSView::create(array('errors' => $form->getErrors()), Response::HTTP_INTERNAL_SERVER_ERROR);
{% endblock method_return %}
    }

{% block form '' %}
